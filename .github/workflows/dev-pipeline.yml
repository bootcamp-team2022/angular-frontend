name: Development Pipeline

on:
  push:
    branches:
    - main

jobs:
  ecr-image-build:
    name: Shipping Docker Image
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Logging in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
  build-deploy-operation:
    name: Building and Deploying Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Install Node Dependencies
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - name: Installing Angular Dependencies
        run: |
          npm install -g @angular/cli
          npm ci
      - name: Generating build assets
        run: ng build
      - name: Uploading Build Assets to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'   
          SOURCE_DIR: 'dist'
  tf-formatting:
    needs: [ build-deploy-operation ]
    name: Automating Terraform Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Terraform Formatting
        uses: dflook/terraform-fmt@v1
        with:
          path: ./ops
      - name: Creating Pull Request
        uses: peter-evans/create-pull-request@v4.1.1
        with:
          commit-message: terraform fmt
          title: Reformatting terraform files
          body: Update terraform files to canonical format using `terraform fmt`
          branch: automated-terraform-fmt
  tf-deployment:
    needs: [ tf-formatting ]
    name: Updating Amazon Infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Deploying Application
        run: |
          make all environment=bc22TraDev

  